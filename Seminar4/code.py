# # Задачи семинара 4


# Для натурального n создать словарь индекс-значение, состоящий из элементов последовательности 3n + 1.

# Пример:

# Для n = 6: {1: 4, 2: 7, 3: 10, 4: 13, 5: 16, 6: 19}
## Вариант группы
# n = int(input('Введите натуральное число '))
# dict = {}
# for i in range (1,n+1):
#     dict[i] = 3*i + 1
# print(dict)

## мой вариант
# def Create3n1Sequence(n: int):
#     listOf3n1 = {}
#     if n <1 : return "Вы ввели ненатуральное число"
#     else :
#         for i in range(1,n+1): listOf3n1[i] = 3*i+1     
#     return listOf3n1

# num = int(input('Введите число элементов: '))
# print(Create3n1Sequence(num))



# Примерная конструкция для задания словарей(препод):
# base = {base: base **2 for I in range(7)}


# Задайте список(произвольный). Напишите программу, которая определит, 
# присутствует ли в заданном списке строк некое число.

# list = [4, 7, 'red', 13, 16, 19, 'чис9ло', '3']
# # new_list = dict.values()
# # print(new_list)
# n = input('Введите искомое число ')
# count = 0
# for i in list:
#     if n == str(i):
#         print("Да есть")
#         count = 1
#         break
# if count == 0:
#     print("Отсутствует")

# list = [4, 7, "red3", 67, "ds2"]

# n = input("Enter number: ")
# found = False
# for i,elem in enumerate(list) :
#     if n in str(elem):
#         print(f"This number is in {i} element")
#         found = True
# if found == False : print("No such number found")        


# Напишите программу, которая определит позицию второго вхождения строки в списке либо сообщит, что её нет(по индексу).

# Пример:

# список: ["qwe", "asd", "zxc", "qwe", "ertqwe"], ищем: "qwe", ответ: 3
# список: ["йцу", "фыв", "ячс", "цук", "йцукен", "йцу"], ищем: "йцу", ответ: 5
# список: ["йцу", "фыв", "ячс", "цук", "йцукен"], ищем: "йцу", ответ: -1
# список: ["123", "234", 123, "567"], ищем: "123", ответ: -1
# список: [], ищем: "123", ответ: -1

# def second_in(list,find):
#     count = 0
#     for i in range(len(list)):
#         if list[i] == find:
#             count+=1
#             if count == 2:
#                 return i
#     return -1

# list = ["qwe", "asd", "zxc", "qwe", "ertqwe"]
# find = "qwe"

# print(second_in(list,find))

# Программа "Именной фильтр". Напишите функцию, которая принимает на вход список с именами людей 
# и возвращает новый список с именами, которые начинаются на гласную букву. В новом списке имя должно начинаться 
# с прописной (большой) буквы, даже если изначально было написано со строчной(маленькой).
# Пример:

# Введите имена через пробел: Никонор иван Харитон Ульяна яков
# Функция вернула ['Иван', 'Ульяна', 'Яков']
# def name_sort(list):
#     vowels_set = {"А","У","О","Е","И","Я","Ю","Ё","Э","Ы"}
#     list_new = []
#     for i in list:
#         time_str = i.capitalize()
#         if time_str[0] in vowels_set:
#             list_new.append(time_str)
#     return list_new

from dataclasses import replace


list = ["Никонор", "иван", "Харитон", "Ульяна", "яков"]
vowels_set = {"А","a","У","у","О","о","Е","e","И","и","Я","я","Ю","ю","Ё","ё","Э","э","Ы","ы"}
for i,elem in enumerate(list):
    if elem[0] not in vowels_set:
        list.remove(elem)
    else :
        list
print(list)

# print(name_sort(list))

# names = input('Введите имена через пробел:').title().split()

# def filter(names):
#     list = []
#     for i in names:
#         if i[0] in "АОУЕИЯ":
#             list.append(i)
#     return list
# print('Функция вернула имена:',filter(names))




# Программа "Среднее арифметическое". Введите целое число от 3 до 20 (число n). 
# Запросите n вещественных чисел и сохраните их в список. 
# Вызовите функцию, которая принимает на вход список (один аргумент) и возвращает 
# среднее арифметическое всех элементов списка. Результат работы функции сохраните в переменную и выведите на экран.
# Пример:

# Введите целое число от 3 до 20 3
# Введите число номер 1: 4
# Введите число номер 2: 5
# Введите число номер 3: 6
# Введено чисел: 3

# Это числа: [4.0, 5.0, 6.0]

# Функция вернула среднее арифметическое: 5.0

# def math_average(list):
#     sum = 0
#     for i in list:
#         sum+=i
#     return sum / len(list)

# n = int(input('Введите целое число от 3 до 20 '))
# list = []
# spisok = list()
# for i in range(n):
#     list.append(float(input(f'Введите число номер {i+1}: ')))
# print(list)
# average = math_average(list)

# print (average)

# 6. Напишите программу, которая будет преобразовывать десятичное число в двоичное.
    
#     *Пример:*
    
#     - 45 -> 101101
#     - 3 -> 11
#     - 2 -> 10
# 7. Задайте число. Составьте список чисел Фибоначчи, в том числе для отрицательных индексов.
    
#     *Пример:*
    
#     - для k = 8 список будет выглядеть так: [-21 ,13, -8, 5, −3, 2, −1, 1, 0, 1, 1, 2, 3, 5, 8, 13, 21]
# https://ru.wikipedia.org/wiki/%D0%9D%D0%B5%D0%B3%D0%B0%D1%84%D0%B8%D0%B1%D0%BE%D0%BD%D0%B0%D1%87%D1%87%D0%B8#:~:text=%D0%92%20%D0%BC%D0%B0%D1%82%D0%B5%D0%BC%D0%B0%D1%82%D0%B8%D0%BA%D0%B5%2C%20%D1%87%D0%B8%D1%81%D0%BB%D0%B0%20%D0%BD%D0%B5%D0%B3%D0%B0%D1%84%D0%B8%D0%B1%D0%BE%D0%BD%D0%B0%D1%87%D1%87%D0%B8%20%E2%80%94%20%D0%BE%D1%82%D1%80%D0%B8%D1%86%D0%B0%D1%82%D0%B5%D0%BB%D1%8C%D0%BD%D0%BE%20%D0%B8%D0%BD%D0%B4%D0%B5%D0%BA%D1%81%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%BD%D1%8B%D0%B5%20%D1%8D%D0%BB%D0%B5%D0%BC%D0%B5%D0%BD%D1%82%D1%8B%20%D0%BF%D0%BE%D1%81%D0%BB%D0%B5%D0%B4%D0%BE%D0%B2%D0%B0%D1%82%D0%B5%D0%BB%D1%8C%D0%BD%D0%BE%D1%81%D1%82%D0%B8%20%D1%87%D0%B8%D1%81%D0%B5%D0%BB%20%D0%A4%D0%B8%D0%B1%D0%BE%D0%BD%D0%B0%D1%87%D1%87%D0%B8.

# 8. Задайте строку из набора чисел. Напишите программу, которая покажет большее и меньшее число. В качестве символа-разделителя используйте пробел.

# 9. Задайте два числа. Напишите программу, которая найдёт НОК (наименьшее общее кратное) этих двух чисел.